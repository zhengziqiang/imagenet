
1. Boost库：它是一个可移植、跨平台，提供源代码的C++库，作为标准库的后备。 在Caffe中用到的Boost头文件包括： (1)、shared_p

(3)、python.hpp：C++/Python互操作；

(4)、make_shared.hpp：make_shared工厂函数代替new操作符；

(5)、python/raw_function.hpp：C++/Python互操作；

(6)、python/suite/indexing/vector_indexing_suite.hpp：C++/Python互操作；

(7)、thread.hpp：线程操作；

(8)、math/special_functions/next.hpp：数学函数；

2.GFlags库：它是google的一个开源的处理命令行参数的库，使用C++开发，可以替代getopt函数。GFlags与getopt函数不同，在GFlags中，标记的定义分散在源代码中，不需要列举在一个地方。

3. GLog库：它是一个应用程序的日志库，提供基于C++风格的流的日志API，以及各种辅助的宏。它的使用方式与C++的stream操作类似。

4. LevelDB库：它是google实现的一个非常高效的Key-Value数据库。它是单进程的服务，性能非常高。它只是一个C/C++编程语言的库，不包含网络服务封装。

LevelDB特点：(1)、LevelDB是一个持久化存储的KV系统，它将大部分数据存储到磁盘上；(2)、LevelDB在存储数据时，是根据记录的Key值有序存储的；(3)、像大多数KV系统一样，LevelDB的操作接口很简单，基本操作包括写记录，读记录以及删除记录，也支持针对多条操作的原子批量操作；(4)、LevelDB支持数据快照(snapshot)功能，使得读取操作不受写操作影响，可以在读操作过程中始终看到一致的数据；(5)、LevelDB支持数据压缩(Snappy)等操作。

5. LMDB库：它是一个超级快、超级小的Key-Value数据存储服务，是由OpenLDAP项目的Symas开发的。使用内存映射文件，因此读取的性能跟内存数据库一样，其大小受限于虚拟地址空间的大小。

6.ProtoBuf库：GoogleProtocol Buffer（简称ProtoBuf），它是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做数据存储或RPC数据交换格式。可用于通信协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。

要使用ProtoBuf库，首先需要自己编写一个.proto文件，定义我们程序中需要处理的结构化数据，在protobuf中，结构化数据被称为Message。在一个.proto文件中可以定义多个消息类型。用Protobuf编译器（protoc.exe）将.proto文件编译成目标语言，会生成对应的.h文件和.cc文件，.proto文件中的每一个消息有一个对应的类。

7.HDF5库：HDF（HierarchicalData File）是美国国家高级计算应用中心（NCSA）为了满足各种领域研究需求而研制的一种能高效存储和分发科学数据的新型数据格式。它可以存储不同类型的图像和数码数据的文件格式，并且可以在不同类型的机器上传输，同时还有统一处理这种文件格式的函数库。HDF5推出于1998年，相较于以前的HDF文件，可以说是一种全新的文件格式。HDF5是用于存储科学数据的一种文件格式和库文件。

HDF5是分层式数据管理结构。HDF5不但能处理更多的对象，存储更大的文件，支持并行I/O，线程和具备现代操作系统与应用程序所要求的其它特性，而且数据模型变得更简单，概括性更强。

HDF5只有两种基本结构，组（group）和数据集（dataset）。组，包含0个或多个HDF5对象以及支持元数据（metadata）的一个群组结构。数据集，数据元素的一个多维数组以及支持元数据。

8. snappy库：它是一个C++库，用来压缩和解压缩的开发包。它旨在提供高速压缩速度和合理的压缩率。Snappy比zlib更快，但文件相对要大20%到100%。
